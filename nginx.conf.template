error_log stderr notice;
daemon off;
events{}

http {
        lua_code_cache on;
        init_by_lua_file '/root/torch-rnn/serve.lua';
		lua_package_path "/root/torch-rnn/?.lua;;";
        server {
                listen ${PORT};
                lua_code_cache on;
                lua_need_request_body on;
                client_body_buffer_size 10M;
                client_max_body_size 10M;
                location /api {
                        # only permit POST requests
                        if ($request_method !~ ^(POST)$ ) {
                                return 403;
                        }

                content_by_lua '
                local body = ngx.req.get_body_data()

                if body == nil then
                ngx.say("empty body")
                else
                local resp = Sample(body)
                ngx.say(cjson.encode({result=resp}))
                end
                ';
                }
        }
}
